---
layout:     post
title:      Javascript의 특징 및 소개
author:     쭌프로
tags: 		  JavaScript
subtitle:   JavaScript 공부 노트
category:   JavaScript
---
<!-- Start Writing Below in Markdown -->

# JavaScript의 특징 및 소개

<p>
  같이 JavaScript를 알아보기 전 참고할만한 책이 있으면 공부하기 쉬울 것 같습니다.<br/>
  필자는 처음 (비전공자로서) 접한 JavaScript의 책은 Do it JavaScript & 제이쿼리 라는 책으로 공부하였습니다.<br/>
  하지만 지금 JavaScript의 특징 및 소개 글을 보고 있는 모두가 같은 책을 가지고 있지 않으니<br/>
  다른 방법으로 같은 내용의 JavaScript의 교육 문서를 볼 수 있는 자료가 필요했습니다.<br/>
  바로 책이 아닌 MDN 웹 문서입니다.<br/>
  제가 참고한 인강에서도 추천한 사이트 입니다.
</p>

<p>
  Mozilla Developer Network는 개발자 및 기술 작가 커뮤니티가 관리하고 <br/>
  HTML5 , JavaScript , CSS , Web API , Node.js , WebExtensions 및 MathML 과 같은 <br/>
  다양한 주제에 대해 많은 문서를 호스팅하는 개발자를위한 리소스입니다 .
</p>

<p>
  JavaScript는 많은 내용을 가지고있는 언어입니다. <br/>
  HTML 이나 CSS 같은 표현하는 것이 아니기 때문에 많은 논리를 필요로 하는 프로그래밍 언어입니다. <br/>
  JavaScript 는 (JS) 라 불리며 인터프리터형 또는 JIT-컴파일형 프로그래밍입니다. <br/>
  컴파일형(컴퓨터파일형) 이라는 것은 (해석기, 번역) 라는 의미로 <br/>
  한번 내용을 번역하면 빠르게 해당 내용을 다시 읽어올 수 있습니다. <br/>
</p>

<p>
  인터프리터형 이라는 것은 (통역) 이라는 의미로 <br/>
  내용을 듣고 해석하고 상대방이 알아들을 수 있는 언어로 다시 바꾸어 보여줍니다.
</p>

<p>
  상대적으로 컴파일형 보다는 인터프리터형이 느린 형태를 가집니다.
</p>

<p>
  JavaScript 는 웹브라우저에서 작동하고 있습니다.<br/>
  사용자가 서버를 통해 자료를 요청하면 <br/>
  서버에서 전달받은 내용(HTML , CSS , JavaScript) 을 해석을 해야 합니다.
</p>

<p>
  JavaScript 는 우선 사용자가 작성한 JavaScript 프로그래밍을 보고 <br/>
  1차적으로 기계어로 번역하여 운영체제에 전송합니다.
</p>

<p>
  운영체제에서 보내서 돌아온 응답 신호를 다시 JavaScript는 <br/>
  인간 언어에 가깝게 2차적으로 번역을 하여 웹상에 보여줍니다.
</p>

{% highlight matlab %}

    <script language="javascript"> document.write("JavaScript는 인터프리터형 언어에 가깝다."); </script>
{% endhighlight %}

<p>
  이렇게 작성할경우 작성한 javascript 프로그래밍은 사라지고 작성한 글자 write 만 출력됩니다.
</p>

{% highlight matlab %}

   "JavaScript는 인터프리터형 언어에 가깝다."
{% endhighlight %}

![Description](https://alalstjr.github.io/jjunpro.github.io/img/2018-08-22.png)

<p>
  그러다 보니 컴파일형언어 보다는 느린 언어라는 것을 알아야 합니다.
</p>

<p>
  주로 웹 페이지를 위한 스크립팅 언어로 알려져 있습니다. </br>
  최근에는 클라이언트사이드가 아니라 서버사이드 언어로 JavaScript 가 사용되고 있습니다. </br>
  바로 유명한 Node.js 입니다. </br>
  JavaScript 를 알고 있다면 미래에 백엔드 분야로 진출할 때 보다 쉽게 접근할 수 있습니다)
</p>

<p>
  JavaScript 는 프로토타입 기반의 다중 패러다임 스크립팅 언어입니다.
</p>

## 프로토타입 기반이란

<p>
  객체지향 프로그래밍의 한 형태의 갈래로 클래스가 없고, <br/>
  클래스 기반 언어에서 상속을 사용하는 것과는 다르게, <br/>
  객체를 원형(프로토타입)으로 하여 복제의 과정을 통하여 <br/>
  객체의 동작 방식을 다시 사용할 수 있다. 라는 내용을 가지고 있습니다.
</p>

<p>
  다중 패러다임 스크립팅 언어는 <br/>
  개발에 필요한 방향성을 한 개가 아닌 여러 개를 가지고 있다는 뜻을 가지고 있습니다.
</p>

## JavaScript 는 역동적입니다.
<p>
  웹 브라우저에서 정적으로 되어있는 것을 <br/>
  사용자가 요구사항을 요청한 것을 받고 동적으로 바꾸어 변환해주는 동적인 언어입니다. <br/>
  JavaScript 는 객체지향형 언어입니다. <br/>
  <a href="https://namu.wiki/w/%EA%B0%9D%EC%B2%B4%20%EC%A7%80%ED%96%A5%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D">
    나무위키 : 프로그램을 어떻게 설계해야 하는지에 대한 일종의 개념이자 방법론.
  </a>
</p>

<p>
  간단하게 설명하자면 객체를 중심으로 하는 언어입니다. <br/>
  나 자신을 중심으로 팔다리를 움직이고 생각하고 말을 합니다. <br/>
  나 자신을 중심으로 프로그래밍 하는 것을 객체지향형 언어입니다. <br/>
  그리고 JavaScript 는 명령형 및 선언형(가령 함수형 프로그래밍) 스타일을 지원합니다.
</p>

<p>
  웹 브라우저에도 표준이 되는 언어가 존재한다. <br/>
  웹 브라우저는 한 개가 아닌 여러 개가 존재합니다. <br/>
  그중에서도 표준이 필요합니다. <br/>
  그래서 ECMA를 통해서 웹브라우저에 적합한 언어라는 표준을 받은 것이 JavaScript 언어입니다. <br/>
  (Ecma 인터내셔널(영어: Ecma International)은 정보와 통신 시스템을 위한 국제적이면서도 회원국 기반의 비영리 표준화 기구이다) <br/>
  JavaScript의 표준의 명칭은 ECMAScript입니다. <br/>
  최근에는 ECMAScript 6 혹은 ES6 라고 부릅니다. <br/>
  실무에서 많이 사용되는 버전은 ECMAScript 5.1 버전입니다. <br/>
  차세대 버전으로는 ECMAScript 6 이 있습니다. 매 1주년마다 업그레이드되고 있습니다.
</p>

<p>
  JavaScript 와 Java 프로그래밍 언어와는 완전 다른 언어이다. <br/>
  많은 사람이 혼동하는 부분이 있습니다. <br/>
  JavaScript 를 줄여서 말한 게 Java 아니야?? <br/>
  네 저도 처음에 둘이 똑같은 내용의 언어인 줄 알았습니다. (줄여서 말한 이름인 줄 알았습니다..) <br/>
  하지만 프로그래밍을 배우면서 둘은 완전 다르다는 것을 알았습니다. <br/>
  간단하게 생각하면 물개, 개(강아지) 둘은 비슷할 수는 있어도 완전 다릅니다. <br/>
  이름만 비슷할 뿐 사용방법이나 문법체계가 전혀 다릅니다. 꼭 기억하도록 합니다. <br/>
  (마케팅을 목적으로 Java 라는 이름을 사용했다는 이야기가 있다..)
</p>

## 하고싶은말

<p>
  개인적으로 이것저것 인터넷 글도 찾아보고 인강도보고 해서 정리한 JavaScript 의 소개 내용입니다. <br/>
  인터프리터형 또는 JIT-컴파일형 프로그래밍 부분에서 많이 이해하기 어려워서 <br/>
  직접 그림도 그려보고 이게 맞는지 지금도 의심스럽지만 <br/>
  (만약 틀리다면 지적의 댓글로 혼내주세요..) <br/>
  최대한 저도 보는이도 (특히 비전공자) 이해하기 쉽도록 정리해 보았습니다. <br/>
  만약 부족한점, 궁금한점이 있다면 바로 댓글로 남겨주세요. <br/>
  같이 생각해보고 고민을해결하며 틀린것을 고쳐나갑시다. <br/>
  감사합니다.
</p>
