---
layout:     post
title:      프로그래머스 1단계 알고리즘 테스트
author:     쭌프로
tags:       알고리즘
subtitle:   프로그래머스 알고리즘
category:   알고리즘
---

<!-- Start Writing Below in Markdown -->

![Description](https://alalstjr.github.io/jjunpro.github.io/img/ag-bg.png)

# 첫번째 문제 설명

두 정수 a, b가 주어졌을 때 a와 b 사이에 속한 모든 정수의 합을 리턴하는 함수, solution을 완성하세요. <br/>
예를 들어 a = 3, b = 5인 경우, 3 + 4 + 5 = 12이므로 12를 리턴합니다. <br/>

# 제한 조건

a와 b가 같은 경우는 둘 중 아무 수나 리턴하세요. <br/>
a와 b는 -10,000,000 이상 10,000,000 이하인 정수입니다. <br/>
a와 b의 대소관계는 정해져있지 않습니다. 

# 입출력 예

a 	b 	return <br/>
3 	5 	12 <br/>
3 	3 	3 <br/>
5 	3 	12

# 쭌프로 코드

{% highlight matlab %}

    class Solution {
      public long solution(int a, int b) {
          long answer = 0;
          int x, y = 0;

          x = (a < b) ? a : b;
          y = (a > b) ? a : b;

          for(int i = x; i <= y; i++) {
              answer += i;
          }

          return answer;
      }
    }
{% endhighlight %}

# 두번째 문제 설명

이 문제에는 표준 입력으로 두 개의 정수 n과 m이 주어집니다. <br/>
별(*) 문자를 이용해 가로의 길이가 n, 세로의 길이가 m인 직사각형 형태를 출력해보세요. <br/>

# 제한 조건

n과 m은 각각 1000 이하인 자연수입니다.

# 예시

입력 <br/>

5 3 <br/>

출력 <br/>

***** <br/>
***** <br/>
*****

{% highlight matlab %}

    import java.util.Scanner;

    public class Solution {
        public static void main(String[] args) {
            Scanner sc = new Scanner(System.in);
            int a = sc.nextInt();
            int b = sc.nextInt();

            String temp = new String();

            for(int i = 0; i < b; i++) {
                temp = "";
                for(int j = 0; j < a; j++) {
                    temp += "*";
                }   
                System.out.println(temp);
            }
        }
    }
{% endhighlight %}

1단계라 그런지 막힘없이 풀었습니다. <br/>
다만 2단계 부터 문자열, 구현, 정렬, 그리디, 해시 종종 이분탐색, 그래프, 큐 관련 <br/>
문제가 출제하다보니 2단계는 아직 도전하기에는 수행 부족으로 생각했습니다.
